#字符串通配符权限测试。
[users]
zhang=123,role1,role2
li=123,role3
qiao=123,role6
aya=123,role7
instance=123,role8,role9
instance2=123,role10
instance3=123,role11
instance4=123,role12

#角色与权限
[roles]

#单个资源单个权限
#用户拥有资源syste:user的update权限
role1=system:user:update

#单个资源多个权限
role2=system:user:update,system:user:delete

#单个资源多个权限，简写版。  ***存在问题。
#此方式存在问题，update，后面的如果使用
#checkPermissions("system:user:delete","system:user:delete");
#会找不到system:user:delete这个权限。 因为在他引擎中会解析成 system:user:update和delete这两个
#最后发现问题的所在在于如果使用多个权限或者其他的需要加上字符串，不然他会解析成上面的类型。
role3="system:user:update,delete"

#单个资源全部权限
role4="system:user:create,delete,update,view"
#单个资源全部权限简写版
role5=system:user:*
#也可以是这样写，不过推荐上面这一种
role6=system:user

#所有资源全部权限
role7=*:view
假设判断的权限是“"system:user:view”，那么需要“role5=*:*:view”这样写才行。

#-------实例级的权限
#单个实例单个权限，对user的1实例具有view权限
role8=user:view:1
#单个实例多个权限，对user的1实例具有update和delete的权限
role9="user:update,delete:1"
#单个实例所有权限
role10=user:*:1

#所有实例单个权限， user的任何实例都拥有auth这个权限
role11=user:auth:*

#所有实例所有权限
role12=user:*:*






